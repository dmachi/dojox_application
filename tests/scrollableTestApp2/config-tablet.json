{
	"id": "scrollableTestApp2",
	"name": "Scrollable Test App2",
	"description": "This is a test app for scrollable lists.",
	"splash": "splash",

	"loaderConfig": {
		"paths": {
			"scrollableTestApp": "../dojox/app/tests/scrollableTestApp2"
		}
	},

	"dependencies": [
		"dojox/mobile/_base",
		"dojox/mobile/_compat",
		"dojox/mobile/TabBar",
		"dojox/mobile/TabBarButton",
		"dojox/mobile/TextBox",
		"dojox/mobile/Button",
		"dojox/mobile/Heading",
		"dojox/mobile/ListItem",
		"dojox/mobile/RoundRectList",
		"dojox/mobile/RoundRectCategory",
		"dojox/app/widgets/Container",
		"dijit/layout/BorderContainer",
		"dojox/mobile/Container",
		"dojo/data/ItemFileWriteStore",
		"dojo/store/DataStore",
		"dojox/app/utils/mvcModel",
		"dojox/mvc/EditStoreRefListController",
		"dojox/mvc/Repeat",
		"dojox/mvc/WidgetList",
		"dojox/mvc/Templated",
		"dojox/mvc/_InlineTemplateMixin",
		"dojox/mobile/ScrollableView",
		"dojox/mvc/Group",
		"dojox/mvc/Output",
		"dojox/mvc/at"
	],
	// Modules for the application.  They are basically used as the second
	// array of mixins in a dojo.declare().  Modify the top level behavior
	// of the application, how it processes the config or any other life cycle
	// by creating and including one or more of these
	"modules": [
		"scrollableTestApp/scrollableTestApp"
	],

	"controllers": [
		"dojox/app/controllers/History",
		"dojox/app/controllers/Load",
		"dojox/app/controllers/Transition",
		"dojox/app/controllers/Layout"
	//	"dojox/app/controllers/BorderLayout"
	],

	//stores we are using
	"stores": {
		"repeatStore":{
			"type": "dojo/data/ItemFileWriteStore",
			"params": {
				"url": "./resources/data/repeat.json"
			}
	   }
	},

	//models and instantiation parameters for the models. Including 'type' as a property allows
	//one to overide the class that will be used for the model.  By default it is dojox/mvc/model
	"models": {
       "repeatmodels": {
       					"modelLoader": "dojox/app/utils/mvcModel",
					"type": "dojox/mvc/EditStoreRefListController",
					"params":{
						"datastore": {"$ref":"#stores.repeatStore"}
					}
        }
	},
	
	//"template": "scrollableTestApp/templates/tablet/ViewScrollableLists.html",
	//"definition": "scrollableTestApp/views/tablet/ViewScrollableLists",

	//the name of the view to load when the app is initialized.
	//"defaultView": "configuration,ScrollableListSelection+TestInfo",
	//"defaultView": "navigation",
	//"defaultView": "TestInfo+navigation",  
	//"defaultView": "navigation+TestInfo",   
	"defaultView": "configuration+TestInfo",
	//"defaultView": "configuration+Scrollable5",

	// these are the possible defaultTransitions, 
	// the defaultTransition is only used if transition is not set in the config and it is not set or defaulted on the transitionEvent
	//"defaultTransition": "slide",
	//"defaultTransition": "none",
	//"defaultTransition": "fade",
	"defaultTransition": "flip",     // Note: flip does not work with a BorderLayout Controller

	// these are the possible transitions, 
	// if a transition is set on a view or parent it will override the transition set on the transitionEvent or the defaultTransition in the config.
	//"transition": "slide",
	//"transition": "none",
	//"transition": "fade",
	//"transition": "flip",

	//views are groups of views and models loaded at once
	"views": {
		"navigation": {
			"template": "scrollableTestApp/templates/tablet/ViewScrollableLists.html",
			"definition" : "scrollableTestApp/views/tablet/ViewScrollableLists.js",
			"transition": "slide",
			"constraint" : "left"
		},
		"configuration": {
			"constraint" : "left",
			"template": "scrollableTestApp/templates/configuration/ScrollableListSelection.html",
			"definition": "scrollableTestApp/views/configuration/ScrollableListSelection.js"

			//"defaultView": "ScrollableListSelection",
			//"defaultTransition": "slide",
			//"definition": "none",
			//"constraint" : "left",
			//
			//"views": {
			//	"ScrollableListSelection": {
			//		"template": "scrollableTestApp/templates/configuration/ScrollableListSelection.html",
			//		"constraint" : "left"		
			//	}
			//}
		},
		
		
		"TestInfo": {
			"transition": "none",
			"template": "scrollableTestApp/templates/TestInfo.html"
		},
		"Scrollable1": {
			"transition": "slide",
			"template": "scrollableTestApp/templates/Scrollable1.html"
		},
		"Scrollable1P": {
			"template": "scrollableTestApp/templates/Scrollable1P.html",
			"transition": "flip",
			"constraint" : "center"
		},
		"Scrollable2": {
			"template": "scrollableTestApp/templates/Scrollable2.html",
			"transition": "fade",
			"constraint" : "center"
		},
		"Scrollable3": {
			"template": "scrollableTestApp/templates/Scrollable3.html",
			"constraint" : "center"
		},
		"Scrollable4": {
			"template": "scrollableTestApp/templates/Scrollable4.html",
			"constraint" : "center"
		},
		"Scrollable5": {
			"template": "scrollableTestApp/templates/Scrollable5.html"
		},
		"ListItemDomButtons": {
			"definition": "scrollableTestApp/views/ListItem-domButtons",
			"template": "scrollableTestApp/templates/ListItem-domButtons.html",
			"constraint" : "center"
		},
		"ListItemDomButtons2": {
			"definition": "scrollableTestApp/views/ListItem-domButtons2",
			"template": "scrollableTestApp/templates/ListItem-domButtons2.html",
			"constraint" : "center"
		},
		
		"repeatDetails": {
			"template": "scrollableTestApp/templates/repeatDetails.html",
			"transition": "slide",
			"constraint" : "center"
		}
	}
}
