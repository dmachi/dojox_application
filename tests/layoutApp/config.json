{
	"id": "layoutApp",
	"name": "layout App",
	"description": "A layout App",
	"splash": "splash",

	"loaderConfig": {
		"paths": {
			"layoutApp": "../dojox/app/tests/layoutApp"
		}
	},

	"dependencies": [
		"dojox/app/utils/simpleModel",
		"dojox/mobile/_base",
		"dojox/mobile/compat",
		"dojox/mobile/TabBar",
		"dojox/mobile/RoundRect",
		"dojox/mobile/TabBarButton",
		"dojox/mobile/Button",
		"dojox/mobile/RoundRect",
		"dojox/mobile/Heading",
		"dojo/store/Memory",
		"dojo/store/Observable",		
		"dojox/mobile/EdgeToEdgeStoreList",
		"dojox/mobile/View",
		"dojox/app/widgets/Container"
	],

	"modules": [],
	
	"controllers": [
		"dojox/app/controllers/Load",
		"dojox/app/controllers/Transition",
		"dojox/app/controllers/Layout"
	],
	
	//stores we are using
	"stores": {
		"namesStore":{
			"type": "dojo/store/Memory",
			"params": {
				"data": "modelApp.names"
			}
		},
		"listStore":{
			"type": "dojo/store/Memory",
			"observable": true,
			"params": {
				"data": "modelApp.listData"
			}
		}
	},

	//models and instantiation parameters for the models. Including 'type' as a property allows
	//one to override the class that will be used for the model.
	"models": {
	   "names": {
			"modelLoader": "dojox/app/utils/simpleModel",
			"params":{
				"store": {"$ref":"#stores.namesStore"}
			}
	   }
	},

	// The has section will include the sections for which the has checks are true.  
	// For the sections with ! it will include the section if the has check is not true.
	"has" : {
		"ie9orLess" : {
			"controllers": [
				"dojox/app/controllers/HistoryHash"
			]
		},
		"!ie9orLess" : {
			"controllers": [
				"dojox/app/controllers/History"
			]
		}
	},	

	"template": "layoutApp/views/navigation.html",

	//the name of the view to load when the app is initialized.
	"defaultView": "simple",

	// these are the possible defaultTransitions, 
	// the defaultTransition is only used if transition is not set in the config and it is not set or defaulted on the transitionEvent
	//"defaultTransition": "slide",
	//"defaultTransition": "none",
	//"defaultTransition": "fade",
	//"defaultTransition": "flip",     // Note: flip does not work with a BorderLayout Controller

	// these are the possible transitions, 
	// if a transition is set on a view or parent it will override the transition set on the transitionEvent or the defaultTransition in the config.
	//"transition": "slide",
	//"transition": "none",
	//"transition": "fade",
	"defaultTransition": "flip",

	"views": {
		"simple":{
			"controller" : "layoutApp/views/simple.js",
			"template": "layoutApp/views/simple.html",
			"dependencies":["dojox/mobile/TextBox"]
		},

		//list view, include list view and details view
		"listMain": {
			"defaultView": "list",
			"defaultTransition": "fade",

			"views": {
				"list":{
					"controller" : "layoutApp/views/list.js",
					"defaultTransition": "slide",
					"template": "layoutApp/views/list.html",
					"dependencies":["dojox/mobile/TextBox"]
				},
				"itemDetails":{
					"controller" : "layoutApp/views/itemDetails.js",
					"defaultTransition": "flip",
					"template": "layoutApp/views/itemDetails.html",
					"dependencies":["dojox/mobile/TextBox"],
					"defaultParams": {"cursor":"2"}
				}
			}
		},

		"date": {
            "controller": "layoutApp/views/date.js",
            "template": "layoutApp/views/date.html",
            "dependencies":["dojox/mobile/DatePicker", "dojox/mobile/Opener", "dojox/mobile/SpinWheelDatePicker"]
		}
	}	
}
